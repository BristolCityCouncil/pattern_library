// Generated by CoffeeScript 1.4.0
(function() {
  var Liquid,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  module.exports = Liquid = (function(_super) {

    __extends(Liquid, _super);

    function Liquid(tokens, template) {
      this.template = template;
      this.parse(tokens);
    }

    Liquid.prototype.blockDelimiter = function() {
      return [];
    };

    Liquid.prototype.assertMissingDelimitation = function() {};

    return Liquid;

  })(require("./block"));

}).call(this);
