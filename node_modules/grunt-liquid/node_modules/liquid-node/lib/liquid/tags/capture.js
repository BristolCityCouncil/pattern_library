// Generated by CoffeeScript 1.4.0
(function() {
  var Capture, Liquid,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Liquid = require("../../liquid");

  module.exports = Capture = (function(_super) {
    var Syntax, SyntaxHelp;

    __extends(Capture, _super);

    Syntax = /(\w+)/;

    SyntaxHelp = "Syntax Error in 'capture' - Valid syntax: capture [var]";

    function Capture(tagName, markup, tokens) {
      var match;
      match = Syntax.exec(markup);
      if (match) {
        this.to = match[1];
      } else {
        throw new Liquid.SyntaxError(SyntaxHelp);
      }
      Capture.__super__.constructor.apply(this, arguments);
    }

    Capture.prototype.render = function(context) {
      var output;
      output = Capture.__super__.render.apply(this, arguments);
      context.lastScope()[this.to] = output;
      return "";
    };

    return Capture;

  })(Liquid.Block);

  Liquid.Template.registerTag('capture', Capture);

}).call(this);
