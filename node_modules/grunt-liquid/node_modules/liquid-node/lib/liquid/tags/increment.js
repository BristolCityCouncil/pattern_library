// Generated by CoffeeScript 1.4.0
(function() {
  var Increment, Liquid,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Liquid = require("../../liquid");

  module.exports = Increment = (function(_super) {

    __extends(Increment, _super);

    function Increment(tagName, markup, tokens) {
      this.variable = markup.trim();
      Increment.__super__.constructor.apply(this, arguments);
    }

    Increment.prototype.render = function(context) {
      var value, _base, _name;
      value = (_base = context.environments[0])[_name = this.variable] || (_base[_name] = 0);
      context.environments[0][this.variable] = value + 1;
      return value.toString();
    };

    return Increment;

  })(Liquid.Tag);

  Liquid.Template.registerTag("increment", Increment);

}).call(this);
