// Generated by CoffeeScript 1.4.0
(function() {
  var Ifchanged, Liquid, Q,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Liquid = require("../../liquid");

  Q = require("q");

  module.exports = Ifchanged = (function(_super) {

    __extends(Ifchanged, _super);

    function Ifchanged() {
      return Ifchanged.__super__.constructor.apply(this, arguments);
    }

    Ifchanged.prototype.render = function(context) {
      var _this = this;
      return context.stack(function() {
        var rendered;
        rendered = _this.renderAll(_this.nodelist, context);
        return Q.when(rendered).then(function(output) {
          if (output !== context.registers["ifchanged"]) {
            context.registers["ifchanged"] = output;
            return output;
          } else {
            return "";
          }
        });
      });
    };

    return Ifchanged;

  })(Liquid.Block);

  Liquid.Template.registerTag("ifchanged", Ifchanged);

}).call(this);
