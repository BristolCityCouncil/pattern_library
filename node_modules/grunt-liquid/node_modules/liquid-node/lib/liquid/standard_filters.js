// Generated by CoffeeScript 1.4.0
(function() {
  var toNumber, toString, _;

  _ = require("underscore")._;

  toNumber = function(input) {
    return Number(input);
  };

  toString = function(input) {
    if (!input) {
      return;
    }
    if (_.isString(input)) {
      return input;
    } else if (typeof input.toString === "function") {
      return input.toString();
    } else {
      return Object.prototype.toString.call(input);
    }
  };

  module.exports = {
    size: function(input) {
      return input.length;
    },
    downcase: function(input) {
      return toString(input).toLowerCase();
    },
    upcase: function(input) {
      return toString(input).toUpperCase();
    },
    append: function(input, other) {
      return [toString(input), toString(other)].join();
    },
    prepend: function(input, other) {
      return [toString(other), toString(input)].join();
    },
    empty: function(input) {
      if (!input) {
        return true;
      }
      if (input.length == null) {
        return false;
      }
      return true;
    },
    truncate: function(input, length, truncateString) {
      var l;
      if (length == null) {
        length = 50;
      }
      if (truncateString == null) {
        truncateString = '...';
      }
      input = toString(input);
      truncateString = toString(truncateString);
      if (input == null) {
        return;
      }
      if (!input.slice) {
        return;
      }
      length = toNumber(length);
      l = length - truncateString.length;
      if (l < 0) {
        l = 0;
      }
      if (input.length > length) {
        return input.slice(0, +l + 1 || 9e9) + truncateString;
      } else {
        return input;
      }
    },
    truncatewords: function(input, words, truncateString) {
      var l, wordlist;
      if (words == null) {
        words = 15;
      }
      if (truncateString == null) {
        truncateString = '...';
      }
      input = toString(input);
      if (input == null) {
        return;
      }
      if (!input.slice) {
        return;
      }
      wordlist = input.split(" ");
      words = toNumber(words);
      l = words - 1;
      if (l < 0) {
        l = 0;
      }
      if (wordlist.length > l) {
        return wordlist.slice(0, +l + 1 || 9e9).join(" ") + truncateString;
      } else {
        return input;
      }
    },
    split: function(input, pattern) {
      input = toString(input);
      if (!input) {
        return;
      }
      return input.split(pattern);
    },
    join: function(input, glue) {
      if (glue == null) {
        glue = ' ';
      }
      return _(input).flatten().join(glue);
    },
    first: function(array) {
      if (array.length > 0) {
        return array[0];
      } else {
        return null;
      }
    },
    last: function(array) {
      if (array.length > 0) {
        return array[array.length - 1];
      } else {
        return null;
      }
    },
    plus: function(input, operand) {
      return toNumber(input) + toNumber(operand);
    },
    minus: function(input, operand) {
      return toNumber(input) - toNumber(operand);
    },
    times: function(input, operand) {
      return toNumber(input) * toNumber(operand);
    },
    dividedBy: function(input, operand) {
      return toNumber(input) / toNumber(operand);
    },
    modulo: function(input, operand) {
      return toNumber(input) % toNumber(operand);
    }
  };

}).call(this);
