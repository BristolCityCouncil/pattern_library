{
  "name": "grunt-prettify",
  "description": "HTML prettifier with options to format HTML according to your own preferences.",
  "version": "0.3.1",
  "homepage": "https://github.com/jonschlinkert/grunt-prettify",
  "author": {
    "name": "jonschlinkert",
    "url": "http://github.com/jonschlinkert/"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/jonschlinkert/grunt-prettify.git"
  },
  "bugs": {
    "url": "https://github.com/jonschlinkert/grunt-prettify/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/jonschlinkert/grunt-prettify/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "dependencies": {
    "js-beautify": "~1.4.2",
    "lodash": "~2.3.0",
    "underscore.string": "~2.3.3"
  },
  "devDependencies": {
    "assemble": "~0.4.27",
    "grunt": "~0.4.2",
    "grunt-contrib-clean": "~0.5.0",
    "grunt-contrib-jshint": "~0.7.2",
    "grunt-readme": "~0.3.4"
  },
  "keywords": [
    "beautifier",
    "beautify HTML",
    "beautify",
    "code indent",
    "code indenter",
    "format HTML",
    "grunt plugin",
    "gruntplugin",
    "html formatter",
    "html formatting",
    "html indent",
    "html indenter",
    "prettifier",
    "prettify HTML",
    "prettify"
  ],
  "contributors": [
    {
      "name": "Jon Schlinkert",
      "url": "https://github.com/jonschlinkert/"
    }
  ],
  "readme": "# grunt-prettify [![NPM version](https://badge.fury.io/js/grunt-prettify.png)](http://badge.fury.io/js/grunt-prettify)  [![Build Status](https://travis-ci.org/jonschlinkert/grunt-prettify.png?branch=master)](https://travis-ci.org/jonschlinkert/grunt-prettify)\r\n\r\n> HTML prettifier with a number of options for formatting HTML the way you like it.\r\n\r\nThis plugin requires Grunt `~0.4.1`\r\n\r\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\r\n\r\n```shell\r\nnpm install grunt-prettify --save-dev\r\n```\r\n\r\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\r\n\r\n```js\r\ngrunt.loadNpmTasks('grunt-prettify');\r\n```\r\n\r\n\r\n## Prettify task\r\n_Run this task with the `grunt prettify` command._\r\n\r\n### Overview\r\nIn your project's Gruntfile, add a section named `prettify` to the data object passed into `grunt.initConfig()`.\r\n\r\n```javascript\r\ngrunt.initConfig({\r\n  prettify: {\r\n    options: {\r\n      // Task-specific options go here.\r\n    },\r\n    html: {\r\n      // Target-specific file lists and/or options go here.\r\n    }\r\n  }\r\n});\r\n```\r\n\r\n\r\n### Options\r\n#### config\r\nType: `String`\r\nDefault value: `null`\r\n\r\nPath to `.jsbeautifyrc`. If this option is specified, options defined therein will be used. The `.jsbeautifyrc` file must be valid JSON and looks something like this:\r\n\r\n```json\r\n{\r\n  \"indent\": 4,\r\n  \"condense\": true,\r\n  \"indent_inner_html\": true,\r\n  \"unformatted\": [\r\n    \"a\",\r\n    \"pre\"\r\n  ]\r\n}\r\n```\r\n\r\nNote that options defined in `.jsbeautifyrc` override the default options, and options defined in the Gruntfile override all other options.\r\n\r\n#### condense\r\nType: `Boolean`\r\nDefault value: `true`\r\n\r\nRemoves extra newlines and retains indenting.\r\n\r\n#### padcomments\r\nType: `Boolean|Number`\r\nDefault value: `false`\r\n\r\nAdd newlines above each code comment. For backwards compatibility, you may set to `true` to add a single newline, or specify the number of newlines you want to add.\r\n\r\n#### indent\r\nType: `Number`\r\nDefault value: `2`\r\n\r\nThe indentation size to be used on the output HTML. This is an alias for `indent_size`. So either `indent` or `indent_size` may be used.\r\n\r\n#### indent_char\r\nType: `String`\r\nDefault value: `' '` (space)\r\nOptions: `space`|`tab` (use an actual space or tab, not the word)\r\n\r\nCharacter with which to indent the output HTML.\r\n\r\n#### indent_scripts\r\nType: `String`\r\nDefault value: `keep`\r\nOptions: `keep`|`separate`|`normal`\r\n\r\nThe indentation character to use to indent the output HTML.\r\n\r\n#### indent_inner_html\r\nType: `Boolean`\r\nDefault value: `true`\r\n\r\nIndent `<body></body>` and `<head></head>` sections.\r\n\r\n#### brace_style\r\nType: `String`\r\nDefault value: `expand`\r\n\r\nOptions:\r\n\r\n* `collapse`: (default) puts braces on the same line as control statements\r\n* `expand`: put all braces on their own lines (Allman / ANSI style)\r\n* `end-expand`: put _end_ braces only on their own line.\r\n\r\n#### wrap_line_length\r\nType: `Number`\r\nDefault value: `0` (disabled)\r\n\r\nMaximum characters per line. `0` disables, max is `250`.\r\n\r\n#### preserve_newlines\r\nType: `Boolean`\r\nDefault value: `false`\r\n\r\nPreserve existing line-breaks.\r\n\r\n#### max_preserve_newlines\r\nType: `Number`\r\nDefault value: `unlimited`\r\n\r\nMaximum number of consecutive line-breaks to be preserved.\r\n\r\n#### unformatted\r\nType: `String|Array`\r\nDefault value: `[\"pre\", \"code\"]`\r\n\r\nArray of tags that should not be re-formatted in the output. Defaults to inline.\r\n\r\n_Attention:_ Make sure you play around with the settings and view the HTML in the browser. Pay special attention to whitespace around links and other inline elements, such as `<strong>` and `<span>`. If you specify a list of elements to remain `unformatted`, you will definitely need to make sure that whitepace is rendering the way you want it to.\r\n\r\n\r\n## Usage Examples\r\n### Default Options\r\nThe default setup in this project's Gruntfile uses an external `.prettifyrc` file for controlling the task's options.\r\n\r\n```js\r\ngrunt.initConfig({\r\n  prettify: {\r\n    options: {\r\n      prettifyrc: '.prettifyrc'\r\n    },\r\n    files: {\r\n      'pretty/index.html': ['ugly/index.html']\r\n    }\r\n  }\r\n});\r\n```\r\n\r\nThe default options are set to:\r\n\r\n``` json\r\n{\r\n  \"indent\": 2,\r\n  \"indent_char\": \" \",\r\n  \"indent_scripts\": \"normal\",\r\n  \"wrap_line_length\": 0,\r\n  \"brace_style\": \"collapse\",\r\n  \"preserve_newlines\": true,\r\n  \"max_preserve_newlines\": 1,\r\n  \"unformatted\": [\r\n    \"a\",\r\n    \"code\",\r\n    \"pre\"\r\n  ]\r\n}\r\n```\r\n\r\n### Custom Options\r\n\r\nYou can also specify the options in the Gruntfile if you wish, like this:\r\n\r\n```js\r\nprettify: {\r\n  options: {\r\n    indent: 2,\r\n    indent_char: ' ',\r\n    wrap_line_length: 78,\r\n    brace_style: 'expand',\r\n    unformatted: ['a', 'sub', 'sup', 'b', 'i', 'u']\r\n  },\r\n  ...\r\n}\r\n```\r\n\r\nExample configurations for prettifying one file at a time, or entire directories of files:\r\n\r\n```js\r\nprettify: {\r\n  options: {\r\n    prettifyrc: '.prettifyrc'\r\n  },\r\n  // Prettify a directory of files\r\n  all: {\r\n    expand: true,\r\n    cwd: 'test/actual/ugly/',\r\n    ext: '.html',\r\n    src: ['*.html'],\r\n    dest: 'test/actual/pretty/'\r\n  },\r\n  // Or prettify one file at a time using the \"files object\" format\r\n  files: {\r\n    'pretty/index.html': ['ugly/index.html']\r\n  },\r\n  // Or the \"compact\" src-dest format\r\n  one: {\r\n    src: 'test/actual/ugly/index.html',\r\n    dest: 'test/actual/pretty/index.html'\r\n  }\r\n}\r\n```\r\n\r\nSee the [grunt][] docs for more information about task configuration.\r\n\r\n\r\n## Release History\r\n\r\n * 2013-08-18   v0.2.7   Options updated to use new config option from js-beautify.\r\n * 2013-04-21   v0.1.1   Create plugin, run tests. Add assemble task to generate test HTML from templates.\r\n * 2013-04-21   v0.1.0   First commit.\r\n\r\n## Author\r\n\r\n**Jon Schlinkert**\r\n\r\n+ [twitter.com/jonschlinkert](http://twitter.com/jonschlinkert)\r\n+ [github.com/jonschlinkert](http://github.com/jonschlinkert)\r\n\r\n## Thanks!\r\nAlso, this plugin requires [js-beautifier](http://jsbeautifier.org/). A sincere **thank you** to the authors and contributors of that project!\r\n * Written by Nochum Sossonko, <nsossonko@hotmail.com>\r\n * Based on code initially developed by: [Einar Lielmanis](elfz@laacz.lv)\r\n * Many [other contributors](https://github.com/einars/js-beautify/contributors)\r\n * [Visit the project](https://github.com/einars/js-beautify)\r\n\r\n## License\r\nCopyright (c) 2013 jonschlinkert, contributors.\r\nReleased under the MIT license\r\n\r\n***\r\n\r\n_This file was generated by [grunt-readme](https://github.com/assemble/grunt-readme) on Monday, November 25, 2013._\r\n\r\n\r\n[grunt]: http://gruntjs.com/\r\n[Getting Started]: https://github.com/gruntjs/grunt/blob/devel/docs/getting_started.md\r\n[package.json]: https://npmjs.org/doc/json.html\r\n",
  "readmeFilename": "README.md",
  "_id": "grunt-prettify@0.3.1",
  "_from": "grunt-prettify@0.3.1"
}
